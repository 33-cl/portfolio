[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.2.5","content-config-digest","2d8a046027844c36","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"always\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"shiki\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"serializeConfig\":false},\"legacy\":{\"collections\":false}}","work",["Map",11,12,49,50,77,78],"cub3d",{"id":11,"data":13,"body":23,"filePath":24,"digest":25,"rendered":26},{"title":14,"description":15,"publishDate":16,"tags":17,"img":21,"img_alt":22},"Cub3d","Projet de l'école 42 consistant a créer un jeu en 3D en C\n",["Date","2024-12-01T00:00:00.000Z"],[18,19,20],"C","Ray casting","Map parsing","/assets/cub3d.png","youtube image cub3d","\u003Ciframe \r\n        width=\"560\" \r\n        height=\"315\" \r\n        src=\"https://youtube.com/embed/M6TIJRxylPM\" \r\n        title=\"YouTube video player\" \r\n        frameborder=\"0\" \r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n        allowfullscreen>\r\n\u003C/iframe>\r\n\r\n## Cub3d : Un raycasting en C\r\n\r\n> \u003Ci>Your goal is to create a dynamic view of a maze where you must find your way.\u003C/i>\r\n\r\nLe projet \u003Cb>cub3d\u003C/b> est une exploration fascinante de la programmation graphique en C. Inspiré par le célèbre jeu Wolfenstein 3D, ce projet consiste à créer un moteur de rendu 3D en utilisant la technique du \u003Cb>raycasting\u003C/b>. L'objectif est de générer une vue dynamique d'un labyrinthe en temps réel, où le joueur peut se déplacer et interagir avec l'environnement.\r\n\r\n\r\n### Fonctionnalités implémentées\r\n\r\n- \u003Cb>Gestion de la carte\u003C/b> : Lecture et validation de fichiers de configuration (.cub) pour définir la carte, les textures et les couleurs.\r\n- \u003Cb>Raycasting\u003C/b> : Algorithme de rendu 3D pour afficher des murs, des sols et des plafonds.\r\n- \u003Cb>Textures\u003C/b> : Application de textures sur les murs pour un rendu visuel réaliste.\r\n- \u003Cb>Mouvements du joueur\u003C/b> : Déplacement fluide avec les touches directionnelles et rotation de la caméra.\r\n- \u003Cb>Gestion des collisions\u003C/b> : Le joueur ne peut pas traverser les murs.\r\n\r\n### Apprentissages clés\r\n\r\nCe projet m'a permis de plonger dans les mathématiques derrière le rendu 3D, notamment les calculs de distances, d'angles et de projections. J'ai également approfondi ma compréhension de la gestion des textures, de la mémoire et des performances en temps réel.\r\n\r\n#### Technologies utilisées\r\n\r\n- \u003Cb>Langage C \u003C/b>: Le cœur du projet, avec une utilisation intensive de la programmation système.\r\n- \u003Cb>MiniLibX \u003C/b>: Bibliothèque graphique fournie par 42 pour créer des fenêtres et afficher des images.\r\n- \u003Cb>Makefile \u003C/b>: Pour la compilation et la gestion des dépendances.\r\n- \u003Cb>Git \u003C/b>: Pour le versioning et la collaboration.","src/content/work/cub3d.md","81bc4b5d6bf07a30",{"html":27,"metadata":28},"\u003Ciframe width=\"560\" height=\"315\" src=\"https://youtube.com/embed/M6TIJRxylPM\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\u003C/iframe>\n\u003Ch2 id=\"cub3d--un-raycasting-en-c\">Cub3d : Un raycasting en C\u003C/h2>\n\u003Cblockquote>\n\u003Cp>\u003Ci>Your goal is to create a dynamic view of a maze where you must find your way.\u003C/i>\u003C/p>\n\u003C/blockquote>\n\u003Cp>Le projet \u003Cb>cub3d\u003C/b> est une exploration fascinante de la programmation graphique en C. Inspiré par le célèbre jeu Wolfenstein 3D, ce projet consiste à créer un moteur de rendu 3D en utilisant la technique du \u003Cb>raycasting\u003C/b>. L’objectif est de générer une vue dynamique d’un labyrinthe en temps réel, où le joueur peut se déplacer et interagir avec l’environnement.\u003C/p>\n\u003Ch3 id=\"fonctionnalités-implémentées\">Fonctionnalités implémentées\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cb>Gestion de la carte\u003C/b> : Lecture et validation de fichiers de configuration (.cub) pour définir la carte, les textures et les couleurs.\u003C/li>\n\u003Cli>\u003Cb>Raycasting\u003C/b> : Algorithme de rendu 3D pour afficher des murs, des sols et des plafonds.\u003C/li>\n\u003Cli>\u003Cb>Textures\u003C/b> : Application de textures sur les murs pour un rendu visuel réaliste.\u003C/li>\n\u003Cli>\u003Cb>Mouvements du joueur\u003C/b> : Déplacement fluide avec les touches directionnelles et rotation de la caméra.\u003C/li>\n\u003Cli>\u003Cb>Gestion des collisions\u003C/b> : Le joueur ne peut pas traverser les murs.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"apprentissages-clés\">Apprentissages clés\u003C/h3>\n\u003Cp>Ce projet m’a permis de plonger dans les mathématiques derrière le rendu 3D, notamment les calculs de distances, d’angles et de projections. J’ai également approfondi ma compréhension de la gestion des textures, de la mémoire et des performances en temps réel.\u003C/p>\n\u003Ch4 id=\"technologies-utilisées\">Technologies utilisées\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cb>Langage C \u003C/b>: Le cœur du projet, avec une utilisation intensive de la programmation système.\u003C/li>\n\u003Cli>\u003Cb>MiniLibX \u003C/b>: Bibliothèque graphique fournie par 42 pour créer des fenêtres et afficher des images.\u003C/li>\n\u003Cli>\u003Cb>Makefile \u003C/b>: Pour la compilation et la gestion des dépendances.\u003C/li>\n\u003Cli>\u003Cb>Git \u003C/b>: Pour le versioning et la collaboration.\u003C/li>\n\u003C/ul>",{"headings":29,"imagePaths":45,"frontmatter":46},[30,34,38,41],{"depth":31,"slug":32,"text":33},2,"cub3d--un-raycasting-en-c","Cub3d : Un raycasting en C",{"depth":35,"slug":36,"text":37},3,"fonctionnalités-implémentées","Fonctionnalités implémentées",{"depth":35,"slug":39,"text":40},"apprentissages-clés","Apprentissages clés",{"depth":42,"slug":43,"text":44},4,"technologies-utilisées","Technologies utilisées",[],{"title":14,"publishDate":47,"img":21,"img_alt":22,"description":15,"tags":48},["Date","2024-12-01T00:00:00.000Z"],[18,19,20],"minishell",{"id":49,"data":51,"body":60,"filePath":61,"digest":62,"rendered":63},{"title":52,"description":53,"publishDate":54,"tags":55,"img":58,"img_alt":59},"Minishell","Projet de l'école 42 consistant a recréer un shell inspiré de bash en C\n",["Date","2024-06-30T00:00:00.000Z"],[18,56,57],"Command parsing","Multi-threading","/assets/minishell.png","Iridescent ripples of a bright blue and pink liquid","\u003Ciframe \n        width=\"560\" \n        height=\"315\" \n        src=\"https://youtube.com/embed/Nqa_MfR3yPE\" \n        title=\"YouTube video player\" \n        frameborder=\"0\" \n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n        allowfullscreen>\n\u003C/iframe>\n\n## Minishell : Un shell minimaliste\n\n> \u003Ci>This project is about creating a simple shell. Yes, your own little bash.\u003C/i>\n\nLe projet \u003Cb>minishell\u003C/b> est l'un des projets les plus emblématiques de l'école 42. Il consiste à créer un interpréteur de commandes (shell) en C, capable de gérer des commandes de base, des pipes, des redirections, et bien plus encore. Le tout de façon rigoureuse avec une parfaite gestion de la mémoire. Ce projet m'a permis de plonger en profondeur dans les mécanismes des systèmes d'exploitation, tout en renforçant mes compétences en programmation système.\n\n### Fonctionnalités implémentées\n\n- \u003Cb>Gestion des commandes simples\u003C/b> : Exécution de commandes comme ls, cd, echo, etc.\n- \u003Cb>Pipes (|)\u003C/b> : Redirection de la sortie d'une commande vers l'entrée d'une autre.\n- \u003Cb>Redirections (>, \u003C, >>)\u003C/b> : Manipulation des flux d'entrée/sortie.\n- \u003Cb>Environnement\u003C/b> : Gestion des variables d'environnement (env, export, unset).\n- \u003Cb>Signaux\u003C/b> : Gestion des interruptions comme Ctrl+C et Ctrl+D.\n\n### Apprentissages clés\n\nCe projet m'a permis de comprendre en détail le fonctionnement d'un shell, ainsi que les appels système essentiels comme fork, execve, pipe, et dup2. J'ai également appris à gérer les erreurs de manière robuste et à structurer un projet complexe en modules.\n\n#### Technologies utilisées\n\n- \u003Cb>Langage C \u003C/b>: Le cœur du projet, avec une utilisation intensive de la programmation système.\n- \u003Cb>Makefile \u003C/b>: Pour la compilation et la gestion des dépendances.\n- \u003Cb>Git \u003C/b>: Pour le versioning et la collaboration.","src/content/work/minishell.md","813ecc3f9646c27c",{"html":64,"metadata":65},"\u003Ciframe width=\"560\" height=\"315\" src=\"https://youtube.com/embed/Nqa_MfR3yPE\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\u003C/iframe>\n\u003Ch2 id=\"minishell--un-shell-minimaliste\">Minishell : Un shell minimaliste\u003C/h2>\n\u003Cblockquote>\n\u003Cp>\u003Ci>This project is about creating a simple shell. Yes, your own little bash.\u003C/i>\u003C/p>\n\u003C/blockquote>\n\u003Cp>Le projet \u003Cb>minishell\u003C/b> est l’un des projets les plus emblématiques de l’école 42. Il consiste à créer un interpréteur de commandes (shell) en C, capable de gérer des commandes de base, des pipes, des redirections, et bien plus encore. Le tout de façon rigoureuse avec une parfaite gestion de la mémoire. Ce projet m’a permis de plonger en profondeur dans les mécanismes des systèmes d’exploitation, tout en renforçant mes compétences en programmation système.\u003C/p>\n\u003Ch3 id=\"fonctionnalités-implémentées\">Fonctionnalités implémentées\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cb>Gestion des commandes simples\u003C/b> : Exécution de commandes comme ls, cd, echo, etc.\u003C/li>\n\u003Cli>\u003Cb>Pipes (|)\u003C/b> : Redirection de la sortie d’une commande vers l’entrée d’une autre.\u003C/li>\n\u003Cli>\u003Cb>Redirections (>, &#x3C;, >>)\u003C/b> : Manipulation des flux d’entrée/sortie.\u003C/li>\n\u003Cli>\u003Cb>Environnement\u003C/b> : Gestion des variables d’environnement (env, export, unset).\u003C/li>\n\u003Cli>\u003Cb>Signaux\u003C/b> : Gestion des interruptions comme Ctrl+C et Ctrl+D.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"apprentissages-clés\">Apprentissages clés\u003C/h3>\n\u003Cp>Ce projet m’a permis de comprendre en détail le fonctionnement d’un shell, ainsi que les appels système essentiels comme fork, execve, pipe, et dup2. J’ai également appris à gérer les erreurs de manière robuste et à structurer un projet complexe en modules.\u003C/p>\n\u003Ch4 id=\"technologies-utilisées\">Technologies utilisées\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cb>Langage C \u003C/b>: Le cœur du projet, avec une utilisation intensive de la programmation système.\u003C/li>\n\u003Cli>\u003Cb>Makefile \u003C/b>: Pour la compilation et la gestion des dépendances.\u003C/li>\n\u003Cli>\u003Cb>Git \u003C/b>: Pour le versioning et la collaboration.\u003C/li>\n\u003C/ul>",{"headings":66,"imagePaths":73,"frontmatter":74},[67,70,71,72],{"depth":31,"slug":68,"text":69},"minishell--un-shell-minimaliste","Minishell : Un shell minimaliste",{"depth":35,"slug":36,"text":37},{"depth":35,"slug":39,"text":40},{"depth":42,"slug":43,"text":44},[],{"title":52,"publishDate":75,"img":58,"img_alt":59,"description":53,"tags":76},["Date","2024-06-30T00:00:00.000Z"],[18,56,57],"so_long",{"id":77,"data":79,"body":88,"filePath":89,"digest":90,"rendered":91},{"title":77,"description":80,"publishDate":81,"tags":82,"img":86,"img_alt":87},"Projet de l'école 42 consistant a créer un jeu vidéo en 2D en C, adapté une variété de maps\n",["Date","2024-04-03T00:00:00.000Z"],[83,84,85],"Game developpement","File parsing","2D rendering","/assets/so_long.png","Soft pink and baby blue water ripples together in a subtle texture.","\u003Ciframe \n        width=\"560\" \n        height=\"315\" \n        src=\"https://youtube.com/embed/yXm4NiJPFEQ\" \n        title=\"YouTube video player\" \n        frameborder=\"0\" \n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n        allowfullscreen>\n\u003C/iframe>\n\n## So_long : Un jeu 2D en C\n\n> \u003Ci>Jeu 2D simple conçu pour vous faire utiliser des textures, des sprites et quelques éléments basiques de gameplay.\u003C/i>\n\nLe projet \u003Cb>so_long\u003C/b> est un jeu 2D développé en C dans le cadre de l'école 42. L'objectif est de créer un jeu simple où le joueur doit collecter des objets et atteindre la sortie tout en évitant les obstacles. Ce projet m'a permis de découvrir la programmation graphique en utilisant la bibliothèque MiniLibX, tout en renforçant mes compétences en algorithmie et en gestion de projet.\n\n\n### Fonctionnalités implémentées\n\n- \u003Cb>Gestion de la carte\u003C/b> : Lecture et validation de fichiers .ber pour générer la carte du jeu.\n- \u003Cb>Mouvements du joueur\u003C/b> : Déplacement du personnage avec les touches directionnelles.\n- \u003Cb>Collecte d'objets\u003C/b> : Le joueur doit collecter tous les objets avant de pouvoir sortir.\n- \u003Cb>Gestion des collisions\u003C/b> : Le joueur ne peut pas traverser les murs ou les ennemis.\n- \u003Cb>Affichage graphique\u003C/b> : Utilisation de la MiniLibX pour afficher la carte, les sprites et les animations.\n\n### Apprentissages clés\n\nCe projet m'a permis de comprendre les bases de la programmation graphique, ainsi que la manipulation d'images et de sprites. J'ai également appris à structurer un projet en C, à gérer les entrées utilisateur et à optimiser les performances pour un rendu fluide.\n\n#### Technologies utilisées\n\n- \u003Cb>Langage C \u003C/b>: Le cœur du projet, avec une utilisation intensive de la programmation système.\n- \u003Cb>MiniLibX \u003C/b>: Bibliothèque graphique fournie par 42 pour créer des fenêtres et afficher des images.\n- \u003Cb>Makefile \u003C/b>: Pour la compilation et la gestion des dépendances.\n- \u003Cb>Git \u003C/b>: Pour le versioning et la collaboration.","src/content/work/so_long.md","4d89fec63fe373dd",{"html":92,"metadata":93},"\u003Ciframe width=\"560\" height=\"315\" src=\"https://youtube.com/embed/yXm4NiJPFEQ\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\u003C/iframe>\n\u003Ch2 id=\"so_long--un-jeu-2d-en-c\">So_long : Un jeu 2D en C\u003C/h2>\n\u003Cblockquote>\n\u003Cp>\u003Ci>Jeu 2D simple conçu pour vous faire utiliser des textures, des sprites et quelques éléments basiques de gameplay.\u003C/i>\u003C/p>\n\u003C/blockquote>\n\u003Cp>Le projet \u003Cb>so_long\u003C/b> est un jeu 2D développé en C dans le cadre de l’école 42. L’objectif est de créer un jeu simple où le joueur doit collecter des objets et atteindre la sortie tout en évitant les obstacles. Ce projet m’a permis de découvrir la programmation graphique en utilisant la bibliothèque MiniLibX, tout en renforçant mes compétences en algorithmie et en gestion de projet.\u003C/p>\n\u003Ch3 id=\"fonctionnalités-implémentées\">Fonctionnalités implémentées\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cb>Gestion de la carte\u003C/b> : Lecture et validation de fichiers .ber pour générer la carte du jeu.\u003C/li>\n\u003Cli>\u003Cb>Mouvements du joueur\u003C/b> : Déplacement du personnage avec les touches directionnelles.\u003C/li>\n\u003Cli>\u003Cb>Collecte d’objets\u003C/b> : Le joueur doit collecter tous les objets avant de pouvoir sortir.\u003C/li>\n\u003Cli>\u003Cb>Gestion des collisions\u003C/b> : Le joueur ne peut pas traverser les murs ou les ennemis.\u003C/li>\n\u003Cli>\u003Cb>Affichage graphique\u003C/b> : Utilisation de la MiniLibX pour afficher la carte, les sprites et les animations.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"apprentissages-clés\">Apprentissages clés\u003C/h3>\n\u003Cp>Ce projet m’a permis de comprendre les bases de la programmation graphique, ainsi que la manipulation d’images et de sprites. J’ai également appris à structurer un projet en C, à gérer les entrées utilisateur et à optimiser les performances pour un rendu fluide.\u003C/p>\n\u003Ch4 id=\"technologies-utilisées\">Technologies utilisées\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cb>Langage C \u003C/b>: Le cœur du projet, avec une utilisation intensive de la programmation système.\u003C/li>\n\u003Cli>\u003Cb>MiniLibX \u003C/b>: Bibliothèque graphique fournie par 42 pour créer des fenêtres et afficher des images.\u003C/li>\n\u003Cli>\u003Cb>Makefile \u003C/b>: Pour la compilation et la gestion des dépendances.\u003C/li>\n\u003Cli>\u003Cb>Git \u003C/b>: Pour le versioning et la collaboration.\u003C/li>\n\u003C/ul>",{"headings":94,"imagePaths":101,"frontmatter":102},[95,98,99,100],{"depth":31,"slug":96,"text":97},"so_long--un-jeu-2d-en-c","So_long : Un jeu 2D en C",{"depth":35,"slug":36,"text":37},{"depth":35,"slug":39,"text":40},{"depth":42,"slug":43,"text":44},[],{"title":77,"publishDate":103,"img":86,"img_alt":87,"description":80,"tags":104},["Date","2024-04-03T00:00:00.000Z"],[83,84,85]]